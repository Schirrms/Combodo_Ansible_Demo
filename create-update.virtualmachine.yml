#
# This playbook is an example on how to use itop.core.write.yml playbook to create or update a Virtual Machine.
# The following parameters need to be set before calling the playbook
#  - obj_class = Class of CI to be written
#  - key = Set of attributes to be used for the reconciliation
#  - fields = Set of attributes to be used for update or creation
#  - output_fields = List of attributes to get from iTop once creation or update is done
# These can be set manually or result from the output of other playbooks, modules...
#
---
- name: Create a Virtual Machine in iTop
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Set variables for the VM creation/update
      ansible.builtin.set_fact:
        itop_obj_class: "VirtualMachine"
        itop_key:
          "name": "{{ vm_name }}"
          "org_id":
            "name": "{{ org_name }}"
          "virtualhost_id":
            "name": "{{ vm_host }}"
        itop_fields:
          "name": "{{ vm_name }}"
          "org_id":
            "name": "{{ org_name }}"
          "status": "production"
          "virtualhost_id":
            "name": "{{ vm_host }}"
            "org_id":
              "name": "{{ org_name }}"
          "osfamily_id":
            "name": "{{ vm_osfamily }}"
          "osversion_id":
            "name": "{{ vm_osversion }}"
            "osfamily_id":
              "name": "{{ vm_osfamily }}"
          "cpu": "{{ vm_cpu }}"
          "ram": "{{ vm_ram }}"
          "managementip": "{{ vm_ip }}"
          "move2production": "{{ vm_move2prod }}"

    - name: Call iTop role to create or update the VM
      ansible.builtin.import_role:
        name: schirrms.combodo_ansible.itop_core_write

    - name: Store the IPv4 id for future use
      ansible.builtin.set_fact:
        ci_id: "{{ itop_obj_key[0] }}"

    - name: Set interfaces for the VM
      ansible.builtin.include_tasks: create-update-vm-interfaces-sub.yml
      loop: "{{ vm_interfaces }}"

    - name: Set contacts for the VM
      ansible.builtin.include_tasks: create-update-link-users-sub.yml
      loop: "{{ vm_contacts }}"
